class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        
        int lo = 0, hi = nums.size()-1;
        while(lo < hi) {
            int mid = lo + (hi-lo) / 2;
            if(mid % 2 == 0) {
                if(nums[mid] == nums[mid+1])    lo = mid + 1;
                else    hi = mid;
            } else {
                if(nums[mid] == nums[mid+1])    hi = mid;
                else    lo = mid + 1;
            }
        }
        return nums[lo];
    }
};

易错点：
  1.第13行写成了lo = mid。我的想法是，比如mid算出来为3，奇数，如果它和nums[4]不等，那么在右边，而且nums[3]自身也有可能是单独一个元素，但是忽略了一
  个前提，就是如果单独元素在右边，那么左边必须是每个元素出现两次，那nums[3]左右有3个元素，要想每个元素出现两次，那必须是nums[3] == nums[2]，所以
  lo要写成mid+1。
